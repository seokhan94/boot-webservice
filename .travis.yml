language: java
jdk:
  - openjdk8
# Travis CI를 어느 브랜치가 푸시될 때 수행할지 지정
# 현재 옵션은 오직 master 브랜치에 push될 때만 수행
branches:
  only:
    - master

# Travis CI 서버의 Home
# 그레이들을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여, 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시되었을 때 수행하는 명령어
# 여기서는 프로젝트 내부에 둔 gradlew을 통해 clean & build를 수행
script: "./gradlew clean build"

before_deploy:
  - mkdir -p before-deploy
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy *
  - cd ../ && mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/freelec-springboot2-webservice.zip
#  - zip -r freelec-springboot2-webservice *
#  - mkdir -p deploy
#  - mv freelec-springboot2-webservice.zip deploy/freelec-springboot2-webservice.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: bootbuild # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: bootbuild # S3 버킷
    key: freelec-springboot2-webservice.zip
    bundle_type: zip
    application: freelec-springboot2-webservice
    deployment_group: freelec-springboot2-webservice-group
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
# Travis CI 실행 완료 시 자동으로 알람이 가도록 설정.
notifications:
  email:
    recipients:
      - seokhan94@naver.com

